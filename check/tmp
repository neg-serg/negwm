List all python (.py) files in the current folder and put them as __all__ variable in __init__.py

from os.path import dirname, basename, isfile, join
import glob
modules = glob.glob(join(dirname(__file__), "*.py"))
__all__ = [ basename(f)[:-3] for f in modules if isfile(f) and not f.endswith('__init__.py')]



Basically so I can drop python files into a directory with no further configuration and have them be executed by a script running somewhere else. – 
Evan Fosmark
Jun 30, 2009 at 1:29
5
@NiallDouglas this answer is for a specific question which OP asked, he didn't have a zip file and pyc files can be included easily, and you are forgetting .pyd or .so libs etc too – 
Anurag Uniyal
Mar 5, 2012 at 3:26
True, the OP didn't ask for running inside zip support, however he did appear to be asking for boilerplate code which would import the contents of a directory. That boilerplate ought to cope with most common situations - it's not hard, just use pkgutil, not os.listdir(), like the other poster below. – 
Niall Douglas
Mar 5, 2012 at 21:00
37
The only thing i would add is if not os.path.basename(f).startswith('_') or at the very least if not f.endswith('__init__.py') to the end of the list comprehension – 
Pykler
Feb 28, 2013 at 21:12
2
If you have installed 'path.py' (pip install path.py), you can use __all__ = [f.namebase for f in path(__file__).parent.glob('*.py')], which I think looks cleaner. I'm also in agreement that __init__.py should be filtered from the list. – 
Mr. B
Aug 15, 2013 at 21:40
1
os.listdir() is a good alternative to glob.glob(): maybe subjective, but IMHO is a bit more standard/readable way to get files in a dir. Or os.walk() if you want recursion – 
MestreLion
Nov 5, 2013 at 14:49
11
To make it more robust, also make sure os.path.isfile(f) is True. That would filter out broken symlinks and directories like somedir.py/ (corner-case, I admit, but still...) – 
MestreLion
Nov 5, 2013 at 14:51
How can I add the filter @MestreLion? I see no place for if statement in the code above... – 
Tomáš Zato - Reinstate Monica
Sep 7, 2015 at 15:40
2
@TomášZato added if condition to list comprehension – 
Anurag Uniyal
Sep 8, 2015 at 0:54
19
Add from . import * after setting __all__ if you want submodules to be available using . (e.g. as module.submodule1, module.submodule2, etc.). – 
ostrokach
May 8, 2016 at 15:21
I check again today and it seems not working any more stackoverflow.com/questions/1057431/… – 
Nam G VU
May 30, 2017 at 6:12
1
To be crossplatform you want to use os.path.join() to construct your path, in case the os.path.sep isn't '/' on the user's troublemaking OS (like Windows): modules = glob.glob(os.path.join(dirname(__file__), '*.py')) – 
hobs
Apr 19, 2019 at 21:45
@EvanFosmark not exactly, since if the script is running, the files already have been imported. But great point, if the file is dropped on a server, maybe no one will notice when restarting the app. – 
Enzo Dtz
May 29 at 23:43
